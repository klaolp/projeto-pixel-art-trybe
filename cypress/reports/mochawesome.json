{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 31,
    "pending": 0,
    "failures": 10,
    "start": "2022-01-12T17:58:47.243Z",
    "end": "2022-01-12T17:59:34.960Z",
    "duration": 47717,
    "testsRegistered": 41,
    "passPercent": 75.60975609756098,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1562ea53-b805-43bf-9636-7ac9c3f05ac2",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c15c54f1-4d64-4a09-a5c0-46069787ba48",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 280,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "e7b59cb2-a4cd-48f9-b460-da214e95b292",
              "parentUUID": "c15c54f1-4d64-4a09-a5c0-46069787ba48",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e7b59cb2-a4cd-48f9-b460-da214e95b292"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 280,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1b58a1e9-d40b-4967-afe9-44aa600cf405",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "62fe838d-b89c-497e-baa0-eeb47fdfa0cc",
              "parentUUID": "1b58a1e9-d40b-4967-afe9-44aa600cf405",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "819be0fa-d5b4-4fd0-8f68-bd3252810021",
              "parentUUID": "1b58a1e9-d40b-4967-afe9-44aa600cf405",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "f10de8e2-f7d3-4b99-8a4e-0ed4c066b74b",
              "parentUUID": "1b58a1e9-d40b-4967-afe9-44aa600cf405",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "c42eb990-6d52-4e8d-833d-359949099f93",
              "parentUUID": "1b58a1e9-d40b-4967-afe9-44aa600cf405",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "ba858cce-51b0-437a-aa29-e0a4ab6349b0",
              "parentUUID": "1b58a1e9-d40b-4967-afe9-44aa600cf405",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "c09893d9-7051-4b39-857a-be79adf00750",
              "parentUUID": "1b58a1e9-d40b-4967-afe9-44aa600cf405",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "6d2092c9-0fdd-4b1c-a84f-7ce8a271ceb8",
              "parentUUID": "1b58a1e9-d40b-4967-afe9-44aa600cf405",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62fe838d-b89c-497e-baa0-eeb47fdfa0cc",
            "819be0fa-d5b4-4fd0-8f68-bd3252810021",
            "f10de8e2-f7d3-4b99-8a4e-0ed4c066b74b",
            "c42eb990-6d52-4e8d-833d-359949099f93",
            "ba858cce-51b0-437a-aa29-e0a4ab6349b0",
            "c09893d9-7051-4b39-857a-be79adf00750",
            "6d2092c9-0fdd-4b1c-a84f-7ce8a271ceb8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1325,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0885e23d-a63d-43c2-b1bb-16159b909e90",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "206312e8-1bb9-4238-be3c-784e2d67015d",
              "parentUUID": "0885e23d-a63d-43c2-b1bb-16159b909e90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "dcc223ae-2438-4848-acec-56125fe7eaa2",
              "parentUUID": "0885e23d-a63d-43c2-b1bb-16159b909e90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "206312e8-1bb9-4238-be3c-784e2d67015d",
            "dcc223ae-2438-4848-acec-56125fe7eaa2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 422,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "70d9ed6e-3ddf-4b01-92bb-a81b52a5a8fd",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "5eea20f5-d6e2-4b66-95a7-33800552ba3d",
              "parentUUID": "70d9ed6e-3ddf-4b01-92bb-a81b52a5a8fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "e2cfbd5c-2aa9-45e7-9acf-cda0b8f9bbbd",
              "parentUUID": "70d9ed6e-3ddf-4b01-92bb-a81b52a5a8fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "73b11daa-99ce-4e9a-9937-e678bd19d989",
              "parentUUID": "70d9ed6e-3ddf-4b01-92bb-a81b52a5a8fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "c315ef61-c156-4700-ab7e-526c29d3f1aa",
              "parentUUID": "70d9ed6e-3ddf-4b01-92bb-a81b52a5a8fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5eea20f5-d6e2-4b66-95a7-33800552ba3d",
            "e2cfbd5c-2aa9-45e7-9acf-cda0b8f9bbbd",
            "73b11daa-99ce-4e9a-9937-e678bd19d989",
            "c315ef61-c156-4700-ab7e-526c29d3f1aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 674,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2d4f99d1-7610-4c11-b01b-57370833baf9",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 435,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "2c9037c7-57c3-4ad5-86c9-ab3e32807660",
              "parentUUID": "2d4f99d1-7610-4c11-b01b-57370833baf9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 358,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "1cf04f52-d879-4d46-8e60-6a243db2693b",
              "parentUUID": "2d4f99d1-7610-4c11-b01b-57370833baf9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c9037c7-57c3-4ad5-86c9-ab3e32807660",
            "1cf04f52-d879-4d46-8e60-6a243db2693b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 793,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b9558c2-e3ce-4204-b3da-5db9643d371c",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "97c3d442-d93a-45f8-9ace-f51752ea2da2",
              "parentUUID": "6b9558c2-e3ce-4204-b3da-5db9643d371c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "1fa2a85a-5dde-4c78-b0e8-403baa5b79e0",
              "parentUUID": "6b9558c2-e3ce-4204-b3da-5db9643d371c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "97c3d442-d93a-45f8-9ace-f51752ea2da2",
            "1fa2a85a-5dde-4c78-b0e8-403baa5b79e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 256,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "837b7c62-db6a-4492-88a4-982a96133fab",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 554,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "b582d024-9c51-4e1a-9e19-70265eb756f4",
              "parentUUID": "837b7c62-db6a-4492-88a4-982a96133fab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8390,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "03286c93-a221-44ea-928e-93d89b684a80",
              "parentUUID": "837b7c62-db6a-4492-88a4-982a96133fab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b582d024-9c51-4e1a-9e19-70265eb756f4",
            "03286c93-a221-44ea-928e-93d89b684a80"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8944,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2f5cce73-30ca-4619-ae41-bb9ebfe09015",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "5d62c9be-557b-4f9b-89b3-67749ec19d04",
              "parentUUID": "2f5cce73-30ca-4619-ae41-bb9ebfe09015",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8501,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "d9ef471c-a6bd-417d-a35c-eadd6a4c4a66",
              "parentUUID": "2f5cce73-30ca-4619-ae41-bb9ebfe09015",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1743,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "ffda4289-5137-438e-8ddc-a9830c86f973",
              "parentUUID": "2f5cce73-30ca-4619-ae41-bb9ebfe09015",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d62c9be-557b-4f9b-89b3-67749ec19d04",
            "d9ef471c-a6bd-417d-a35c-eadd6a4c4a66",
            "ffda4289-5137-438e-8ddc-a9830c86f973"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12401,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1bebdf19-93aa-444b-8018-5fce51c39926",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "9fcb794f-3797-4141-9ed2-d81a27b3242e",
              "parentUUID": "1bebdf19-93aa-444b-8018-5fce51c39926",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "1c6e221c-6cd5-49ae-bcb2-af6022768ca6",
              "parentUUID": "1bebdf19-93aa-444b-8018-5fce51c39926",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "c317d415-93c3-42f5-abcc-5855d261d1b4",
              "parentUUID": "1bebdf19-93aa-444b-8018-5fce51c39926",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 6498,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(255, 0, 0)'",
                "estack": "CypressError: Timed out retrying: expected '<div.pixel>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(255, 0, 0)'\n    at cypressErr (http://localhost:33613/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33613/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33613/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33613/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33613/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33613/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33613/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33613/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33613/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33613/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6a0f546c-8d98-42f7-987b-be6129d4e0e0",
              "parentUUID": "1bebdf19-93aa-444b-8018-5fce51c39926",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9fcb794f-3797-4141-9ed2-d81a27b3242e",
            "1c6e221c-6cd5-49ae-bcb2-af6022768ca6",
            "c317d415-93c3-42f5-abcc-5855d261d1b4"
          ],
          "failures": [
            "6a0f546c-8d98-42f7-987b-be6129d4e0e0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6953,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "daeef392-5c15-4298-a15f-81de967103de",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "49c24368-2a32-4d17-8a90-59417fafb649",
              "parentUUID": "daeef392-5c15-4298-a15f-81de967103de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "f0162eb5-ade2-4032-bae1-77852103c8e6",
              "parentUUID": "daeef392-5c15-4298-a15f-81de967103de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4653,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:33613/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33613/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33613/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33613/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33613/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33613/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33613/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33613/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33613/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33613/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ec715663-eb3d-4f83-9ed6-6373bfc33295",
              "parentUUID": "daeef392-5c15-4298-a15f-81de967103de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 458,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "ddb1f016-26b4-470b-809c-7605cc5f5ede",
              "parentUUID": "daeef392-5c15-4298-a15f-81de967103de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 394,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "8064f558-82bc-42b5-9112-90a04c2ca4e5",
              "parentUUID": "daeef392-5c15-4298-a15f-81de967103de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 323,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "969dc0fb-f859-4ed9-8d61-1e7815fec29c",
              "parentUUID": "daeef392-5c15-4298-a15f-81de967103de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 715,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:33613/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33613/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33613/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33613/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33613/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33613/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33613/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33613/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33613/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33613/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8ef3ccd8-dfaf-4fbf-a5d5-3506b64f18b5",
              "parentUUID": "daeef392-5c15-4298-a15f-81de967103de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 1751,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: cy.clear() failed because it requires a valid clearable element.\n\nThe element cleared was:\n\n  > <input id=\"board-size\" type=\"range\" min=\"5\" max=\"50\">\n\nA clearable element matches one of the following selectors:\n  'a[href]'\n  'area[href]'\n  'input'\n  'select'\n  'textarea'\n  'button'\n  'iframe'\n  '[tabindex]'\n  '[contenteditable]'",
                "estack": "CypressError: cy.clear() failed because it requires a valid clearable element.\n\nThe element cleared was:\n\n  > <input id=\"board-size\" type=\"range\" min=\"5\" max=\"50\">\n\nA clearable element matches one of the following selectors:\n  'a[href]'\n  'area[href]'\n  'input'\n  'select'\n  'textarea'\n  'button'\n  'iframe'\n  '[tabindex]'\n  '[contenteditable]'\n    at cypressErr (http://localhost:33613/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33613/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33613/__cypress/runner/cypress_runner.js:149915:3)\n    at clear (http://localhost:33613/__cypress/runner/cypress_runner.js:135619:19)\n    at tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Object.gotValue (http://localhost:33613/__cypress/runner/cypress_runner.js:166557:18)\n    at Object.gotAccum (http://localhost:33613/__cypress/runner/cypress_runner.js:166546:25)\n    at Object.tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33613/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33613/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33613/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33613/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "58297b15-1bce-4907-a119-d3d210c3c89a",
              "parentUUID": "daeef392-5c15-4298-a15f-81de967103de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 1285,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: cy.clear() failed because it requires a valid clearable element.\n\nThe element cleared was:\n\n  > <input id=\"board-size\" type=\"range\" min=\"5\" max=\"50\">\n\nA clearable element matches one of the following selectors:\n  'a[href]'\n  'area[href]'\n  'input'\n  'select'\n  'textarea'\n  'button'\n  'iframe'\n  '[tabindex]'\n  '[contenteditable]'",
                "estack": "CypressError: cy.clear() failed because it requires a valid clearable element.\n\nThe element cleared was:\n\n  > <input id=\"board-size\" type=\"range\" min=\"5\" max=\"50\">\n\nA clearable element matches one of the following selectors:\n  'a[href]'\n  'area[href]'\n  'input'\n  'select'\n  'textarea'\n  'button'\n  'iframe'\n  '[tabindex]'\n  '[contenteditable]'\n    at cypressErr (http://localhost:33613/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33613/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33613/__cypress/runner/cypress_runner.js:149915:3)\n    at clear (http://localhost:33613/__cypress/runner/cypress_runner.js:135619:19)\n    at tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Object.gotValue (http://localhost:33613/__cypress/runner/cypress_runner.js:166557:18)\n    at Object.gotAccum (http://localhost:33613/__cypress/runner/cypress_runner.js:166546:25)\n    at Object.tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33613/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33613/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33613/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33613/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "95a9268b-1fb7-4615-8aed-805619f9bf3c",
              "parentUUID": "daeef392-5c15-4298-a15f-81de967103de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "49c24368-2a32-4d17-8a90-59417fafb649",
            "f0162eb5-ade2-4032-bae1-77852103c8e6",
            "ddb1f016-26b4-470b-809c-7605cc5f5ede",
            "8064f558-82bc-42b5-9112-90a04c2ca4e5",
            "969dc0fb-f859-4ed9-8d61-1e7815fec29c"
          ],
          "failures": [
            "ec715663-eb3d-4f83-9ed6-6373bfc33295",
            "8ef3ccd8-dfaf-4fbf-a5d5-3506b64f18b5",
            "58297b15-1bce-4907-a119-d3d210c3c89a",
            "95a9268b-1fb7-4615-8aed-805619f9bf3c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10015,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9897f787-6f1a-4240-a787-c4031b26310e",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 1858,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: cy.clear() failed because it requires a valid clearable element.\n\nThe element cleared was:\n\n  > <input id=\"board-size\" type=\"range\" min=\"5\" max=\"50\">\n\nA clearable element matches one of the following selectors:\n  'a[href]'\n  'area[href]'\n  'input'\n  'select'\n  'textarea'\n  'button'\n  'iframe'\n  '[tabindex]'\n  '[contenteditable]'",
                "estack": "CypressError: cy.clear() failed because it requires a valid clearable element.\n\nThe element cleared was:\n\n  > <input id=\"board-size\" type=\"range\" min=\"5\" max=\"50\">\n\nA clearable element matches one of the following selectors:\n  'a[href]'\n  'area[href]'\n  'input'\n  'select'\n  'textarea'\n  'button'\n  'iframe'\n  '[tabindex]'\n  '[contenteditable]'\n    at cypressErr (http://localhost:33613/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33613/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33613/__cypress/runner/cypress_runner.js:149915:3)\n    at clear (http://localhost:33613/__cypress/runner/cypress_runner.js:135619:19)\n    at tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Object.gotValue (http://localhost:33613/__cypress/runner/cypress_runner.js:166557:18)\n    at Object.gotAccum (http://localhost:33613/__cypress/runner/cypress_runner.js:166546:25)\n    at Object.tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33613/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33613/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33613/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33613/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d3f26e7a-86a7-4d45-ad7c-65247b7965d2",
              "parentUUID": "9897f787-6f1a-4240-a787-c4031b26310e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 778,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: cy.clear() failed because it requires a valid clearable element.\n\nThe element cleared was:\n\n  > <input id=\"board-size\" type=\"range\" min=\"5\" max=\"50\">\n\nA clearable element matches one of the following selectors:\n  'a[href]'\n  'area[href]'\n  'input'\n  'select'\n  'textarea'\n  'button'\n  'iframe'\n  '[tabindex]'\n  '[contenteditable]'",
                "estack": "CypressError: cy.clear() failed because it requires a valid clearable element.\n\nThe element cleared was:\n\n  > <input id=\"board-size\" type=\"range\" min=\"5\" max=\"50\">\n\nA clearable element matches one of the following selectors:\n  'a[href]'\n  'area[href]'\n  'input'\n  'select'\n  'textarea'\n  'button'\n  'iframe'\n  '[tabindex]'\n  '[contenteditable]'\n    at cypressErr (http://localhost:33613/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33613/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33613/__cypress/runner/cypress_runner.js:149915:3)\n    at clear (http://localhost:33613/__cypress/runner/cypress_runner.js:135619:19)\n    at tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Object.gotValue (http://localhost:33613/__cypress/runner/cypress_runner.js:166557:18)\n    at Object.gotAccum (http://localhost:33613/__cypress/runner/cypress_runner.js:166546:25)\n    at Object.tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33613/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33613/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33613/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33613/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "26026527-21e8-48fc-a2b5-8c4cdb79688a",
              "parentUUID": "9897f787-6f1a-4240-a787-c4031b26310e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 447,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: cy.clear() failed because it requires a valid clearable element.\n\nThe element cleared was:\n\n  > <input id=\"board-size\" type=\"range\" min=\"5\" max=\"50\">\n\nA clearable element matches one of the following selectors:\n  'a[href]'\n  'area[href]'\n  'input'\n  'select'\n  'textarea'\n  'button'\n  'iframe'\n  '[tabindex]'\n  '[contenteditable]'",
                "estack": "CypressError: cy.clear() failed because it requires a valid clearable element.\n\nThe element cleared was:\n\n  > <input id=\"board-size\" type=\"range\" min=\"5\" max=\"50\">\n\nA clearable element matches one of the following selectors:\n  'a[href]'\n  'area[href]'\n  'input'\n  'select'\n  'textarea'\n  'button'\n  'iframe'\n  '[tabindex]'\n  '[contenteditable]'\n    at cypressErr (http://localhost:33613/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33613/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33613/__cypress/runner/cypress_runner.js:149915:3)\n    at clear (http://localhost:33613/__cypress/runner/cypress_runner.js:135619:19)\n    at tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Object.gotValue (http://localhost:33613/__cypress/runner/cypress_runner.js:166557:18)\n    at Object.gotAccum (http://localhost:33613/__cypress/runner/cypress_runner.js:166546:25)\n    at Object.tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33613/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33613/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33613/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33613/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "35bc0ee1-83b8-4351-9c1e-550a098424c2",
              "parentUUID": "9897f787-6f1a-4240-a787-c4031b26310e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d3f26e7a-86a7-4d45-ad7c-65247b7965d2",
            "26026527-21e8-48fc-a2b5-8c4cdb79688a",
            "35bc0ee1-83b8-4351-9c1e-550a098424c2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3083,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8067a831-9179-4760-bd7b-b373f70acc69",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 575,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33613/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33613/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33613/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33613/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33613/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33613/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33613/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33613/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33613/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33613/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "d1208a76-67fa-40d4-b403-f3488b115a31",
              "parentUUID": "8067a831-9179-4760-bd7b-b373f70acc69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 418,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33613/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33613/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33613/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33613/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33613/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33613/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33613/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33613/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33613/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33613/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33613/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33613/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "68e9f110-6668-4362-a611-7ae9d13fcfc5",
              "parentUUID": "8067a831-9179-4760-bd7b-b373f70acc69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d1208a76-67fa-40d4-b403-f3488b115a31",
            "68e9f110-6668-4362-a611-7ae9d13fcfc5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 993,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}